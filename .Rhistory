setwd("~/Winter 2022/TO 414 001 WN 2022/Feb. 7th -  Intro to Machine Learning, KNN")
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
View(wbcd)
str(wbcd)
wbcd <- wbcd[-1]
table(wbcd$diagnosis)
wbcd$diagnosis <- factor(wbcd$diagnosis, levels = c("B", "M"),
labels = c("Benign", "Malignant"))
round(prop.table(table(wbcd$diagnosis)) * 100, 1)
summary(wbcd[c("radius_mean", "area_mean", "smoothness_mean")])
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
wbcd_n <- as.data.frame(lapply(wbcd[2:ncol(wbcd)], normalize))
summary(wbcd_n[c("radius_mean", "area_mean", "smoothness_mean")])
set.seed(123)
test_set <- sample(1:nrow(wbcd_n), 100)
wbcd_train <- wbcd_n[-test_set, ]
wbcd_test <- wbcd_n[test_set, ]
wbcd_train_labels <- wbcd[-test_set, "diagnosis"]
wbcd_test_labels <- wbcd[test_set, "diagnosis"]
library(class)
library(caret)
#Run KNN on train data, create predictions for test data
#Starting K value close to sqrt(nrow(wbcd_train))
sqrt(nrow(wbcd_train))
wbcd_test_pred <- knn(train = wbcd_train, test = wbcd_test,
cl = wbcd_train_labels, k=21)
#Evaluate model results
library(gmodels)
install.packages("gmodels")
#Evaluate model results
library(gmodels)
CrossTable(x = wbcd_test_labels, y = wbcd_test_pred,
prop.chisq=FALSE)
# example using the caret package
confusionMatrix(wbcd_test_pred, wbcd_test_labels, positive = "Malignant")
